@model DomainModel.ServerBackup

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">
    function Submit() {
        var date = document.getElementById("date").value;
        var time = document.getElementById("time").value;
        var dateFormat = new Date(date + ' ' + time);
        document.getElementById("ScheduledTime").value = dateFormat.toISOString();
    }
</script>

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ServerBackup</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ScheduledTime)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScheduledTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="date" type="date" class="form-control" />
                @Html.ValidationMessageFor(model => model.ScheduledTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScheduledTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="time" type="time" class="form-control" />
                @Html.ValidationMessageFor(model => model.ScheduledTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.ExpirationDate, htmlAttributes: new { @type = "date", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Frequency, new SelectList(ViewBag.Frequency, "Value", "Text", "----Select Frequency----"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BackupType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BackupType, new SelectList(ViewBag.BackupType, "Value", "Text", "----Select Backup Type----"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BackupType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SQLBackupID, "SQLBackupID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SQLBackupID, new SelectList(ViewBag.SQLBackup, "Value", "Text", "----Select SQL Database----"), htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SQLBackupID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" onclick="Submit();" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
