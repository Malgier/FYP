@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<script>

    function showDetail() {

        var jsdata = '{id: ' + @ViewBag.LinkableId + '}';

        $.ajax({
            type: "POST",
            url: "/ServerStatus/RetrieveStatus",
            data: jsdata,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (retValue) {

                google.charts.load('current', { packages: ['corechart', 'line'] });
                google.charts.setOnLoadCallback(drawBasic);

                function drawBasic() {

                    //CPU Draw
                    var data = new google.visualization.DataTable();
                    data.addColumn('timeofday', 'Time of Day');
                    data.addColumn('number', 'CPU');

                    var rows = new Array();
                    for (i = 0; i < retValue.length; ++i) {
                        var date = new Date(retValue[i].DateOfStatus);
                        var hours = date.getHours();
                        var minutes = date.getMinutes();
                        var seconds = date.getSeconds();
                        rows.push([[hours, minutes, seconds], JSON.parse(retValue[i].CPUUsage)]);
                    }

                    data.addRows(rows);

                    var options = {
                        hAxis: {
                            title: 'Time'
                        },
                        vAxis: {
                            title: 'Usage (%)'
                        }
                    };

                    var chart = new google.visualization.LineChart(document.getElementById('CPUchart_div'));

                    chart.draw(data, options);

                    var data = new google.visualization.DataTable();
                    data.addColumn('timeofday', 'Time of Day');
                    data.addColumn('number', 'RAM');

                    var rows = new Array();
                    for (i = 0; i < retValue.length; ++i) {
                        var date = new Date(retValue[i].DateOfStatus);
                        var hours = date.getHours();
                        var minutes = date.getMinutes();
                        var seconds = date.getSeconds();
                        rows.push([[hours, minutes, seconds], JSON.parse(retValue[i].MemoryAvailble)]);
                    }

                    data.addRows(rows);

                    var options = {
                        hAxis: {
                            title: 'Time'
                        },
                        vAxis: {
                            title: 'Available (MB)'
                        },
                        colors: ['green']
                    };

                    var chart = new google.visualization.LineChart(document.getElementById('RAMchart_div'));

                    chart.draw(data, options);

                    var data = new google.visualization.DataTable();
                    data.addColumn('timeofday', 'Time of Day');
                    data.addColumn('number', 'Network');

                    var rows = new Array();
                    for (i = 0; i < retValue.length; ++i) {
                        var date = new Date(retValue[i].DateOfStatus);
                        var hours = date.getHours();
                        var minutes = date.getMinutes();
                        var seconds = date.getSeconds();
                        rows.push([[hours, minutes, seconds], JSON.parse(retValue[i].NetworkUsage)]);
                    }

                    data.addRows(rows);

                    var options = {
                        hAxis: {
                            title: 'Time'
                        },
                        vAxis: {
                            title: 'Usage (%)'
                        },
                        colors: ['red']
                    };

                    var chart = new google.visualization.LineChart(document.getElementById('Networkchart_div'));

                    chart.draw(data, options);
                }
                repeater = setTimeout(showDetail, 5000)
            },
            error: function (msg) {
                alert(msg.responseText);
            }
        });
    }

    showDetail();

</script>

<div id="CPUchart_div"></div>

<div id="RAMchart_div"></div>

<div id="Networkchart_div"></div>

@Html.ActionLink("Yesterdays Status", "StatusHistory", new { id = ViewBag.LinkableId }) |